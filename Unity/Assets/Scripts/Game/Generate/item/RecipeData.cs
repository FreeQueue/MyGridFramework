//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.item
{ 

public sealed partial class RecipeData :  Bright.Config.BeanBase 
{
    public RecipeData(JSONNode _json) 
    {
        { if(!_json["material1"].IsNumber) { throw new SerializationException(); }  Material1 = (item.ItemId)_json["material1"].AsInt; }
        { if(!_json["material2"].IsNumber) { throw new SerializationException(); }  Material2 = (item.ItemId)_json["material2"].AsInt; }
        { var _j = _json["product"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  Product = (item.ItemId)_j.AsInt; } } else { Product = null; } }
        { var _j = _json["effect"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  Effect = (item.RecipeEvent)_j.AsInt; } } else { Effect = null; } }
        PostInit();
    }

    public RecipeData(item.ItemId material1, item.ItemId material2, item.ItemId? product, item.RecipeEvent? effect ) 
    {
        this.Material1 = material1;
        this.Material2 = material2;
        this.Product = product;
        this.Effect = effect;
        PostInit();
    }

    public static RecipeData DeserializeRecipeData(JSONNode _json)
    {
        return new item.RecipeData(_json);
    }

    /// <summary>
    /// 材料1
    /// </summary>
    public item.ItemId Material1 { get; private set; }
    /// <summary>
    /// 材料2
    /// </summary>
    public item.ItemId Material2 { get; private set; }
    /// <summary>
    /// 产物
    /// </summary>
    public item.ItemId? Product { get; private set; }
    /// <summary>
    /// 效果
    /// </summary>
    public item.RecipeEvent? Effect { get; private set; }

    public const int __ID__ = -1228789709;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Material1:" + Material1 + ","
        + "Material2:" + Material2 + ","
        + "Product:" + Product + ","
        + "Effect:" + Effect + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
