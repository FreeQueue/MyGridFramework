//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.grid
{ 

public sealed partial class TileData :  Bright.Config.BeanBase 
{
    public TileData(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = (grid.TileId)_json["id"].AsInt; }
        { if(!_json["passDirection"].IsNumber) { throw new SerializationException(); }  PassDirection = (grid.Direction)_json["passDirection"].AsInt; }
        { if(!_json["behaviour"].IsString) { throw new SerializationException(); }  Behaviour = _json["behaviour"]; }
        PostInit();
    }

    public TileData(grid.TileId id, grid.Direction passDirection, string behaviour ) 
    {
        this.Id = id;
        this.PassDirection = passDirection;
        this.Behaviour = behaviour;
        PostInit();
    }

    public static TileData DeserializeTileData(JSONNode _json)
    {
        return new grid.TileData(_json);
    }

    public grid.TileId Id { get; private set; }
    public grid.Direction PassDirection { get; private set; }
    /// <summary>
    /// 行为
    /// </summary>
    public string Behaviour { get; private set; }

    public const int __ID__ = 216582464;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "PassDirection:" + PassDirection + ","
        + "Behaviour:" + Behaviour + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
