//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.entity
{ 

public sealed partial class EntityGroupData :  Bright.Config.BeanBase 
{
    public EntityGroupData(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = (entity.EntityGroupId)_json["id"].AsInt; }
        { var _j = _json["auto_release_interval"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  AutoReleaseInterval = _j; } } else { AutoReleaseInterval = null; } }
        { var _j = _json["capacity"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  Capacity = _j; } } else { Capacity = null; } }
        { var _j = _json["expire_time"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  ExpireTime = _j; } } else { ExpireTime = null; } }
        { var _j = _json["priority"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsNumber) { throw new SerializationException(); }  Priority = _j; } } else { Priority = null; } }
        PostInit();
    }

    public EntityGroupData(entity.EntityGroupId id, float? auto_release_interval, int? capacity, float? expire_time, int? priority ) 
    {
        this.Id = id;
        this.AutoReleaseInterval = auto_release_interval;
        this.Capacity = capacity;
        this.ExpireTime = expire_time;
        this.Priority = priority;
        PostInit();
    }

    public static EntityGroupData DeserializeEntityGroupData(JSONNode _json)
    {
        return new entity.EntityGroupData(_json);
    }

    /// <summary>
    /// 实体组id
    /// </summary>
    public entity.EntityGroupId Id { get; private set; }
    /// <summary>
    /// 实体实例对象池自动释放可释放对象的间隔秒数
    /// </summary>
    public float? AutoReleaseInterval { get; private set; }
    /// <summary>
    /// 实体实例对象池容量
    /// </summary>
    public int? Capacity { get; private set; }
    /// <summary>
    /// 实体实例对象池对象过期秒数
    /// </summary>
    public float? ExpireTime { get; private set; }
    /// <summary>
    /// 实体实例对象池的优先级
    /// </summary>
    public int? Priority { get; private set; }

    public const int __ID__ = 358040059;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "AutoReleaseInterval:" + AutoReleaseInterval + ","
        + "Capacity:" + Capacity + ","
        + "ExpireTime:" + ExpireTime + ","
        + "Priority:" + Priority + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
